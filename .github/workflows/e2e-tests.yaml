name: 'e2e test'

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [main]
    paths:
      - idea/api-gateway/**
      - idea/data-storage/**
      - idea/events-listener/**
      - idea/frontend/**
      - idea/test-balance/**
      - idea/tests/**
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  KUBE_NAMESPACE: test-env
  DOCKER_BUILDKIT: 1
  REACT_APP_NODE_ADDRESS: ${{ secrets.REACT_APP_NODE_ADDRESS }}
  REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
  REACT_APP_WASM_COMPILER_URL: ${{ secrets.REACT_APP_WASM_COMPILER_URL }}
  REACT_APP_DEFAULT_NODES_URL: ${{ secrets.REACT_APP_DEFAULT_NODES_URL }}
  REACT_APP_RRT: ''
  REACT_APP_HCAPTCHA_SITE_KEY: ${{ secrets.REACT_APP_HCAPTCHA_SITE_KEY }}

jobs:

  run-e2e-tests:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install NodeJS 18.x
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 18.x

      - name: YARN_ENABLE_IMMUTABLE_INSTALLS=false yarn install
        run: YARN_ENABLE_IMMUTABLE_INSTALLS=false yarn install

      - name: 'Install: Nightly toolchain'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: clippy, rustfmt
          target: wasm32-unknown-unknown

      - name: Cargo clean
        working-directory: api/test/programs
        run: cargo clean

      - name: Build test programs
        working-directory: api/test/programs
        run: cargo build --release --frozen --locked

      - name: Copy built programs
        run: |
          cp api/test/programs/target/wasm32-unknown-unknown/release/test_meta* idea/tests/wasm-test
          cp api/test/programs/test-meta/meta.txt idea/tests/wasm-test/meta.txt

      - name: Prepare&Run Tests
        timeout-minutes: 7
        working-directory: idea/tests
        env:
          API_ENDPOINT: ${{ secrets.API_ADDRESS_URL_TEST }}
          WS_PROVIDER: ${{ secrets.WS_PROVIDER_URL_TEST }}
          WS_PROVIDER_VARA: ${{ secrets.WS_PROVIDER_VARA_URL_TEST }}
          TEST_ENV: ${{ secrets.TEST_ENV }}
        run: yarn test
